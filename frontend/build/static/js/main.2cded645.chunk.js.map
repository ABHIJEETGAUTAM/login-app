{"version":3,"sources":["components/SignIn.js","components/SignUp.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["SignIn","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onPhoneNumberChange","event","setState","signInPhoneNumber","target","value","onPasswordChange","signInPassword","onSignIn","fetch","method","headers","Content-Type","body","JSON","stringify","phoneNumber","state","password","then","response","json","data","alert","sessionStorage","setItem","token","route","onSignUpClick","react_default","a","createElement","reactstrap_es","onChange","type","placeholder","onClick","color","size","block","className","href","Redirect","to","Component","SignUp","phone_no","Password","onNameChange","Name","onAadharChange","Aadhar","onSignInClick","onSignUp","name","aadhar","Home","updateUserInfo","userInfo","id","onLogout","removeItem","componentDidMount","getItem","App","loadUser","user","_this2","BrowserRouter","Route","exact","path","render","components_SignIn","components_Home","components_SignUp","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2cded645.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signInPhoneNumber: '',\n      signInPassword: '',\n      route: 'signin',\n    }\n  }\n\n  onPhoneNumberChange = (event) => {\n    this.setState({signInPhoneNumber: event.target.value})\n  }\n\n  onPasswordChange = (event) => {\n    this.setState({signInPassword: event.target.value})\n  }\n\n  onSignIn = () => {\n    fetch('http://localhost:8080/signin', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        phoneNumber: this.state.signInPhoneNumber,\n        password: this.state.signInPassword\n      })\n    })\n      .then(response => response.json())\n      .then(data => {\n        if(data === false){\n          alert('Invalid Phone Number or Passowrd');\n        }\n        else{\n          sessionStorage.setItem('token', data.token);\n          this.setState({route: \"home\"});\n        }\n      })\n  }\n\n  onSignUpClick = () => {\n    this.setState({route: \"signup\"})\n  }\n  \n  render() {\n    if(this.state.route === 'signin'){\n      return (\n        <div>\n          <Form>\n            <FormGroup>\n              <h1>Sign In</h1>\n            </FormGroup>\n            <FormGroup>\n              <Label>Phone Number</Label>\n              <Input onChange={this.onPhoneNumberChange} type=\"text\" placeholder=\"Enter Email\" />\n            </FormGroup>\n            <FormGroup>\n              <Label>Password</Label>\n              <Input onChange={this.onPasswordChange} type=\"password\" placeholder=\"Enter Password\" />\n            </FormGroup>\n            <FormGroup>\n              <Button onClick={this.onSignIn} color=\"primary\" size=\"lg\" block>Sign In</Button>\n            </FormGroup>\n            <FormGroup>\n              <a onClick={this.onSignUpClick} className=\"f6 link dim black db\" href=\"#0\">\n                Sign up\n              </a>              \n            </FormGroup>\n          </Form>\n        </div>\n      );\n    }\n    else if (this.state.route === 'signup'){\n      return(\n        <Redirect to=\"/signup\"/>\n      );\n    }\n    else if (this.state.route === 'home'){\n      return(\n        <Redirect to=\"/home\"/>\n      );\n    }\n  }\n}\n\nexport default SignIn;\n","import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phone_no: '',\n      Password: '',\n      Name: '',\n      Aadhar: '',\n      route: 'signup'\n    }\n  }\n\n  onPhoneNumberChange = (event) => {\n    this.setState({phone_no: event.target.value})\n  }\n\n  onPasswordChange = (event) => {\n    this.setState({Password: event.target.value})\n  }\n\n  onNameChange = (event) => {\n      this.setState({Name: event.target.value})\n  }\n\n  onAadharChange = (event) => {\n      this.setState({Aadhar: event.target.value})\n  }\n\n  onSignInClick = () => {\n    this.setState({route: \"signin\"})\n  }\n\n  onSignUp = () => {\n    fetch('http://localhost:8080/signup', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        name: this.state.Name,\n        aadhar: this.state.Aadhar,\n        phoneNumber: this.state.phone_no,\n        password: this.state.Password\n      })\n    })\n    .then(response => response.json())\n    .then(data => {\n      if(data === false){\n        alert('Error Signing up. Check credentials');\n      }\n      else{\n        sessionStorage.setItem('token', data.token);\n        this.setState({route: \"home\"});\n      }\n    })\n  }\n  \n  render() {\n    if(this.state.route === 'signup'){\n      return (\n        <div>\n          <Form>\n            <FormGroup>\n              <h1>Sign Up</h1>\n            </FormGroup>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input onChange={this.onNameChange} type=\"text\" placeholder=\"Enter Name\" />\n            </FormGroup>\n            <FormGroup>\n              <Label>Phone Number</Label>\n              <Input onChange={this.onPhoneNumberChange} type=\"text\" placeholder=\"Enter Phone Number\" />\n            </FormGroup>\n            <FormGroup>\n              <Label>Aadhar Number</Label>\n              <Input onChange={this.onAadharChange} type=\"text\" placeholder=\"Enter Aadhar Number\" />\n            </FormGroup>\n            <FormGroup>\n              <Label>Password</Label>\n              <Input onChange={this.onPasswordChange} type=\"password\" placeholder=\"Enter Password  \" />\n            </FormGroup>\n            <FormGroup>\n              <Button onClick={this.onSignUp} color=\"primary\" size=\"lg\" block>Sign Up</Button>\n            </FormGroup>\n            <FormGroup>\n              <a onClick={this.onSignInClick} className=\"f6 link dim black db\" href=\"#0\">\n                Sign in\n              </a>\n            </FormGroup>\n          </Form>\n        </div>\n      );\n    }\n    else if (this.state.route === 'home'){\n      return(\n        <Redirect to=\"/home\"/>\n      );\n    }\n    else if(this.state.route === 'signin'){\n      return(\n        <Redirect to=\"/\"/>\n      );\n    }\n  }\n}\n\nexport default SignUp;\n","import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      route: 'home',\n      userInfo: {\n        id: '',\n        name: '',\n        phoneNumber: '',\n        aadhar: '',\n        password: ''\n      }\n    }\n  };\n\n  updateUserInfo = (data) => {\n    this.setState({userInfo: { \n      id: data.id,\n      name: data.name,\n      phoneNumber: data.phone_no,\n      aadhar: data.aadhar,\n      password: data.password \n  }})\n  }\n\n  onLogout = () => {\n    this.setState({route: 'signin'});\n    sessionStorage.removeItem('token');\n  }\n\n  componentDidMount = () => {\n    fetch('http://localhost:8080/home', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        token: sessionStorage.getItem('token'),\n      })\n    })\n      .then(response => response.json())\n      .then(data => {\n        if(data === false){\n          alert('Error Retreiving data');\n        }\n        else{\n          this.updateUserInfo(data);\n        }\n      })\n  }\n\n  render() {\n      if(this.state.route === 'home'){\n        return(\n          <div className=\"ma4 flex flex-column tc\">\n              <div className=\"ba flex flex-column db\">\n                <p className=\"f1 ma2 b\">User Information</p>\n                <p className=\"f3 ma2 b\">ID</p>\n                <p className=\"f3 ma2\">{this.state.userInfo.id}</p>\n                <p className=\"f3 ma2 b\">Name</p>\n                <p className=\"f3 ma2\">{this.state.userInfo.name}</p>\n                <p className=\"f3 ma2 b\">Phone Number</p>\n                <p className=\"f3 ma2\">{this.state.userInfo.phoneNumber}</p>\n                <p className=\"f3 ma2 b\">Aadhar Card Number</p>\n                <p className=\"f3 ma2\">{this.state.userInfo.aadhar}</p>\n                <p className=\"f3 ma2 b\">Password</p>\n                <p className=\"f3 ma2\">{this.state.userInfo.password}</p>\n              </div>\n              <div className=\"ma4\">\n                <a \n                  onClick={this.onLogout}\n                  className=\"f6 link dim ba ph3 pv2 mb2 dib black grow\" \n                  href=\"#0\">\n                  Logout\n                </a>\n              </div>\n          </div>\n  \n        );\n      }\n      else if(this.state.route === 'signin'){\n        return(\n          <Redirect to=\"/\"/>\n        );\n      }\n    }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport SignIn from './components/SignIn';\nimport SignUp from './components/SignUp';\nimport {BrowserRouter, Route} from 'react-router-dom';  \nimport Home from './components/Home';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        user: {\n            id: '',\n            name: '',\n            phoneNumber: '',\n            aadhar: '',\n            password: ''\n          }\n    }\n  };\n\n  loadUser = (data) => {\n    this.setState({user: { \n        id: data.id,\n        name: data.name,\n        phoneNumber: data.phone_no,\n        aadhar: data.aadhar,\n        password: data.password \n    }})\n  }\n\n  render() {\n      return(\n        <BrowserRouter>\n            <div>\n            <Route \n                exact path=\"/\"\n                render={() => (\n                    <SignIn loadUser={this.loadUser} />\n                )} \n            />\n            <Route \n                exact path=\"/home\"\n                render={() => (\n                    <Home phoneNumber={this.state.user.phoneNumber}  />\n                )} \n            />\n            <Route \n                exact path=\"/signup\"\n                render={() => (\n                    <SignUp loadUser={this.loadUser} />\n                )} \n            />\n            </div>\n        </BrowserRouter>\n      );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './index.css'\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}