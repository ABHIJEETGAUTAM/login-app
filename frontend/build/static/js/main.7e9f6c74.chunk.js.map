{"version":3,"sources":["components/SignIn.js","components/SignUp.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["SignIn","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","sessionStorage","getItem","setState","route","handleAlertClose","alert","onPhoneNumberChange","event","signInPhoneNumber","target","value","onPasswordChange","signInPassword","onSignIn","fetch","method","headers","Content-Type","body","JSON","stringify","phoneNumber","state","password","then","response","json","data","setItem","token","onSignUpClick","react_default","a","createElement","index_es","container","justify","alignItems","style","marginTop","color","padding","direction","variant","type","label","placeholder","margin","onChange","onClick","cursor","open","onClose","aria-labelledby","aria-describedby","autoFocus","Redirect","to","Component","SignUp","phone_no","Password","onNameChange","Name","onAadharChange","Aadhar","onSignInClick","onSignUp","name","aadhar","Home","updateUserInfo","userInfo","id","onLogout","removeItem","App","loadUser","user","_this2","BrowserRouter","Route","exact","path","render","components_SignIn","components_Home","components_SignUp","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mQAkIeA,cA7Hb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KASRQ,kBAAoB,WAEL,OADCC,eAAeC,QAAQ,UAEnCT,EAAKU,SAAS,CAACC,MAAO,UAbPX,EAiBnBY,iBAAmB,WACjBZ,EAAKU,SAAS,CAACG,OAAO,KAlBLb,EAqBnBc,oBAAsB,SAACC,GACrBf,EAAKU,SAAS,CAACM,kBAAmBD,EAAME,OAAOC,SAtB9BlB,EAyBnBmB,iBAAmB,SAACJ,GAClBf,EAAKU,SAAS,CAACU,eAAgBL,EAAME,OAAOC,SA1B3BlB,EA6BnBqB,SAAW,WACTrB,EAAKU,SAAS,CAACC,MAAO,YACtBW,MAAM,qDAAsD,CAC1DC,OAAQ,OACRC,QAAS,CAACC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACnBC,YAAa7B,EAAK8B,MAAMd,kBACxBe,SAAU/B,EAAK8B,MAAMV,mBAGtBY,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,IACQ,IAATA,GACDnC,EAAKU,SAAS,CAACG,OAAO,IACtBb,EAAKU,SAAS,CAACC,MAAO,aAGtBH,eAAe4B,QAAQ,QAASD,EAAKE,OACrCrC,EAAKU,SAAS,CAACC,MAAO,aA/CXX,EAoDnBsC,cAAgB,WACdtC,EAAKU,SAAS,CAACC,MAAO,YAnDtBX,EAAK8B,MAAQ,CACXd,kBAAmB,GACnBI,eAAgB,GAChBT,MAAO,SACPE,OAAO,GANQb,wEAyDjB,MAAwB,YAArBG,KAAK2B,MAAMnB,MAEV4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,SAASC,MAAO,CAACC,UAAW,UACtER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkBI,MAAO,CAACE,MAAO,cAIV,WAArB7C,KAAK2B,MAAMnB,MAEf4B,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAACC,UAAW,SACtBR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,UAC1CN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMI,MAAO,CAACG,QAAS,SACrBV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACO,UAAU,SAASN,QAAQ,SAASC,WAAW,UAC7DN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYS,QAAQ,MAApB,WAGAZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEU,KAAK,OACLC,MAAM,qBACNC,YAAY,qBACZC,OAAO,SACPC,SAAUrD,KAAKW,sBAEjByB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEU,KAAK,WACLC,MAAM,iBACNC,YAAY,qBACZC,OAAO,SACPC,SAAUrD,KAAKgB,mBAEjBoB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQS,QAAQ,YAAYH,MAAM,UAAUS,QAAStD,KAAKkB,SAAUyB,MAAO,CAACC,UAAW,SAAvF,WAGAR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYI,MAAO,CAAEY,OAAQ,UAAWX,UAAW,QAAUU,QAAStD,KAAKmC,eAA3E,eAMNC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiB,KAAMxD,KAAK2B,MAAMjB,MACjB+C,QAASzD,KAAKS,iBACdiD,kBAAgB,qBAChBC,mBAAiB,4BAEnBvB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAc,oCACdH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQe,QAAStD,KAAKS,iBAAkBoC,MAAM,UAAUe,WAAS,GAAjE,YAQsB,WAArB5D,KAAK2B,MAAMnB,MAEhB4B,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAUC,GAAG,YAGa,SAArB9D,KAAK2B,MAAMnB,MAEhB4B,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAUC,GAAG,eAFZ,SAtHYC,aCwJNC,cAvJb,SAAAA,EAAYpE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgE,IACjBnE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkE,GAAA7D,KAAAH,KAAMJ,KAWRQ,kBAAoB,WAEL,OADCC,eAAeC,QAAQ,UAEnCT,EAAKU,SAAS,CAACC,MAAO,UAfPX,EAmBnBY,iBAAmB,WACjBZ,EAAKU,SAAS,CAACG,OAAO,KApBLb,EAuBnBc,oBAAsB,SAACC,GACrBf,EAAKU,SAAS,CAAC0D,SAAUrD,EAAME,OAAOC,SAxBrBlB,EA2BnBmB,iBAAmB,SAACJ,GAClBf,EAAKU,SAAS,CAAC2D,SAAUtD,EAAME,OAAOC,SA5BrBlB,EA+BnBsE,aAAe,SAACvD,GACZf,EAAKU,SAAS,CAAC6D,KAAMxD,EAAME,OAAOC,SAhCnBlB,EAmCnBwE,eAAiB,SAACzD,GACdf,EAAKU,SAAS,CAAC+D,OAAQ1D,EAAME,OAAOC,SApCrBlB,EAuCnB0E,cAAgB,WACd1E,EAAKU,SAAS,CAACC,MAAO,YAxCLX,EA2CnB2E,SAAW,WACT3E,EAAKU,SAAS,CAACC,MAAO,YACtBW,MAAM,qDAAsD,CAC1DC,OAAQ,OACRC,QAAS,CAACC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACnBgD,KAAM5E,EAAK8B,MAAMyC,KACjBM,OAAQ7E,EAAK8B,MAAM2C,OACnB5C,YAAa7B,EAAK8B,MAAMsC,SACxBrC,SAAU/B,EAAK8B,MAAMuC,aAGxBrC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,IACQ,IAATA,GACDnC,EAAKU,SAAS,CAACG,OAAO,IACtBb,EAAKU,SAAS,CAACC,MAAO,aAGtBH,eAAe4B,QAAQ,QAASD,EAAKE,OACrCrC,EAAKU,SAAS,CAACC,MAAO,aA7D1BX,EAAK8B,MAAQ,CACXsC,SAAU,GACVC,SAAU,GACVE,KAAM,GACNE,OAAQ,GACR9D,MAAO,SACPE,OAAO,GARQb,wEAqEjB,MAAwB,YAArBG,KAAK2B,MAAMnB,MAEV4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,SAASC,MAAO,CAACC,UAAW,UACtER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkBI,MAAO,CAACE,MAAO,cAIV,WAArB7C,KAAK2B,MAAMnB,MAEf4B,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAACC,UAAW,SACxBR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,UAC1CN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMI,MAAO,CAACG,QAAS,SACrBV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACO,UAAU,SAASN,QAAQ,SAASC,WAAW,UAC7DN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYS,QAAQ,MAApB,WAGAZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEU,KAAK,OACLC,MAAM,aACNC,YAAY,aACZC,OAAO,SACPC,SAAUrD,KAAKmE,eAEjB/B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEU,KAAK,OACLC,MAAM,sBACNC,YAAY,sBACZC,OAAO,SACPC,SAAUrD,KAAKqE,iBAEjBjC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEU,KAAK,OACLC,MAAM,qBACNC,YAAY,qBACZC,OAAO,SACPC,SAAUrD,KAAKW,sBAEjByB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEU,KAAK,WACLC,MAAM,iBACNC,YAAY,qBACZC,OAAO,SACPC,SAAUrD,KAAKgB,mBAEjBoB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQS,QAAQ,YAAYH,MAAM,UAAUS,QAAStD,KAAKwE,SAAU7B,MAAO,CAACC,UAAW,SAAvF,WAGAR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYI,MAAO,CAAEY,OAAQ,UAAWX,UAAW,QAAUU,QAAStD,KAAKuE,eAA3E,eAMNnC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiB,KAAMxD,KAAK2B,MAAMjB,MACjB+C,QAASzD,KAAKS,iBACdiD,kBAAgB,qBAChBC,mBAAiB,4BAEnBvB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAc,+BACdH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQe,QAAStD,KAAKS,iBAAkBoC,MAAM,UAAUe,WAAS,GAAjE,YAQwB,SAArB5D,KAAK2B,MAAMnB,MAEhB4B,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAUC,GAAG,UAGY,WAArB9D,KAAK2B,MAAMnB,MAEf4B,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAUC,GAAG,WAFZ,SAhJYC,+BC6GNY,cA3Gb,SAAAA,EAAY/E,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2E,IACjB9E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6E,GAAAxE,KAAAH,KAAMJ,KAaRgF,eAAiB,SAAC5C,GAChBnC,EAAKU,SAAS,CAACsE,SAAU,CACvBC,GAAI9C,EAAK8C,GACTL,KAAMzC,EAAKyC,KACX/C,YAAaM,EAAKiC,SAClBS,OAAQ1C,EAAK0C,OACb9C,SAAUI,EAAKJ,YAEjB/B,EAAKU,SAAS,CAACC,MAAO,UAtBLX,EAyBnBkF,SAAW,WACTlF,EAAKU,SAAS,CAACC,MAAO,WACtBH,eAAe2E,WAAW,UA3BTnF,EA8BnBO,kBAAoB,WAClBe,MAAM,mDAAoD,CACxDC,OAAQ,OACRC,QAAS,CAACC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACnBS,MAAO7B,eAAeC,QAAQ,aAG/BuB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,IACQ,IAATA,EACDnC,EAAKU,SAAS,CAACC,MAAO,WAGtBX,EAAK+E,eAAe5C,MA1C1BnC,EAAK8B,MAAQ,CACXnB,MAAO,UACPqE,SAAU,CACRC,GAAI,GACJL,KAAM,GACN/C,YAAa,GACbgD,OAAQ,GACR9C,SAAU,KATG/B,wEAkDjB,MAAwB,YAArBG,KAAK2B,MAAMnB,MAEV4B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,SAASC,MAAO,CAACC,UAAW,UACtER,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkBI,MAAO,CAACE,MAAO,cAIV,SAArB7C,KAAK2B,MAAMnB,MAEf4B,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAACC,UAAW,SACtBR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,WAAW,UAC1CN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMI,MAAO,CAACG,QAAS,SACrBV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACO,UAAU,SAASN,QAAQ,SAASC,WAAW,UAC7DN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYS,QAAQ,MAApB,oBAGAZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,gBACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAYvC,KAAK2B,MAAMkD,SAASC,KAElC1C,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,aACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAYvC,KAAK2B,MAAMkD,SAASJ,OAElCrC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,qBACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAYvC,KAAK2B,MAAMkD,SAASnD,cAElCU,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,sBACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAYvC,KAAK2B,MAAMkD,SAASH,SAElCtC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,iBACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAYvC,KAAK2B,MAAMkD,SAASjD,aAItCQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQe,QAAStD,KAAK+E,SAAU/B,QAAQ,YAAYH,MAAM,UAAUF,MAAO,CAACC,UAAW,QAASgB,WAAS,GAAzG,cASiB,WAArB5D,KAAK2B,MAAMnB,MAEf4B,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAUC,GAAG,WAFZ,SApGUC,aCqDJkB,cAnDb,SAAAA,EAAYrF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiF,IACjBpF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmF,GAAA9E,KAAAH,KAAMJ,KAYRsF,SAAW,SAAClD,GACVnC,EAAKU,SAAS,CAAC4E,KAAM,CACjBL,GAAI9C,EAAK8C,GACTL,KAAMzC,EAAKyC,KACX/C,YAAaM,EAAKiC,SAClBS,OAAQ1C,EAAK0C,OACb9C,SAAUI,EAAKJ,aAjBnB/B,EAAK8B,MAAQ,CACTwD,KAAM,CACFL,GAAI,GACJL,KAAM,GACN/C,YAAa,GACbgD,OAAQ,GACR9C,SAAU,KARD/B,wEAuBV,IAAAuF,EAAApF,KACL,OACEoC,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,KACIjD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CACIC,OAAK,EAACC,KAAK,IACXC,OAAQ,kBACJrD,EAAAC,EAAAC,cAACoD,EAAD,CAAQR,SAAUE,EAAKF,cAG/B9C,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CACIC,OAAK,EAACC,KAAK,QACXC,OAAQ,kBACJrD,EAAAC,EAAAC,cAACqD,EAAD,CAAMjE,YAAa0D,EAAKzD,MAAMwD,KAAKzD,iBAG3CU,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CACIC,OAAK,EAACC,KAAK,UACXC,OAAQ,kBACJrD,EAAAC,EAAAC,cAACsD,EAAD,CAAQV,SAAUE,EAAKF,uBA3CzBnB,oBCME8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAAST,OAAOrD,EAAAC,EAAAC,cAAC6D,EAAD,MAAQC,SAASC,eAAe,SDsH1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3E,KAAK,SAAA4E,GACjCA,EAAaC","file":"static/js/main.7e9f6c74.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom';\nimport { TextField, Button, Grid, Typography, Card, Dialog, DialogActions, DialogTitle, CircularProgress } from '@material-ui/core';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signInPhoneNumber: '',\n      signInPassword: '',\n      route: 'signin',\n      alert: false\n    }\n  }\n\n  componentDidMount = () => {\n    const token = sessionStorage.getItem('token');\n    if(token !== null){\n      this.setState({route: 'home'});\n    }\n  }\n\n  handleAlertClose = () => {\n    this.setState({alert: false})\n  }\n\n  onPhoneNumberChange = (event) => {\n    this.setState({signInPhoneNumber: event.target.value})\n  }\n\n  onPasswordChange = (event) => {\n    this.setState({signInPassword: event.target.value})\n  }\n\n  onSignIn = () => {\n    this.setState({route: 'loading'});\n    fetch('https://infinite-hamlet-28839.herokuapp.com/signin', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        phoneNumber: this.state.signInPhoneNumber,\n        password: this.state.signInPassword\n      })\n    })\n      .then(response => response.json())\n      .then(data => {\n        if(data === false){\n          this.setState({alert: true});\n          this.setState({route: \"signin\"})\n        }\n        else{\n          sessionStorage.setItem('token', data.token);\n          this.setState({route: \"home\"});\n        }\n      })\n  }\n\n  onSignUpClick = () => {\n    this.setState({route: \"signup\"})\n  }\n  \n  render() {\n    if(this.state.route === 'loading'){\n      return(\n        <Grid container justify=\"center\" alignItems=\"center\" style={{marginTop: \"300px\"}}>\n          <CircularProgress style={{color: \"#ffffff\"}}/>\n        </Grid>\n      );\n    }\n    else if(this.state.route === 'signin'){\n      return (\n        <div style={{marginTop: '50px'}}>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Card style={{padding: '50px'}}>\n              <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n                <Typography variant=\"h3\">\n                  Sign In\n                </Typography>\n                <TextField\n                  type=\"text\"\n                  label=\"Enter Phone Number\"\n                  placeholder=\"Enter Phone Number\"\n                  margin=\"normal\"\n                  onChange={this.onPhoneNumberChange}\n                />\n                <TextField\n                  type=\"password\"\n                  label=\"Enter Password\"\n                  placeholder=\"Enter Phone Number\"\n                  margin=\"normal\"\n                  onChange={this.onPasswordChange}\n                />\n                <Button variant=\"contained\" color=\"primary\" onClick={this.onSignIn} style={{marginTop: '20px'}}>\n                  Sign In\n                </Button> \n                <Typography style={{ cursor: 'pointer', marginTop: '20px' }} onClick={this.onSignUpClick}>\n                  Sign Up?\n                </Typography>\n              </Grid>\n            </Card>\n          </Grid>\n          <Dialog\n            open={this.state.alert}\n            onClose={this.handleAlertClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n          <DialogTitle>{\"Invalid Phone Number or Password\"}</DialogTitle>\n          <DialogActions>\n            <Button onClick={this.handleAlertClose} color=\"primary\" autoFocus>\n              Close\n            </Button>\n          </DialogActions>\n          </Dialog>\n        </div>\n      );\n    }\n    else if (this.state.route === 'signup'){\n      return(\n        <Redirect to=\"/signup\"/>\n      );\n    }\n    else if (this.state.route === 'home'){\n      return(\n        <Redirect to=\"/home\"/>\n      );\n    }\n  }\n}\n\nexport default SignIn;\n","import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom';\nimport { TextField, Button, Grid, Typography, Card, Dialog, DialogActions, DialogTitle, CircularProgress } from '@material-ui/core';\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phone_no: '',\n      Password: '',\n      Name: '',\n      Aadhar: '',\n      route: 'signup',\n      alert: false\n    }\n  }\n\n  componentDidMount = () => {\n    const token = sessionStorage.getItem('token');\n    if(token !== null){\n      this.setState({route: 'home'});\n    }\n  }\n\n  handleAlertClose = () => {\n    this.setState({alert: false})\n  }\n\n  onPhoneNumberChange = (event) => {\n    this.setState({phone_no: event.target.value})\n  }\n\n  onPasswordChange = (event) => {\n    this.setState({Password: event.target.value})\n  }\n\n  onNameChange = (event) => {\n      this.setState({Name: event.target.value})\n  }\n\n  onAadharChange = (event) => {\n      this.setState({Aadhar: event.target.value})\n  }\n\n  onSignInClick = () => {\n    this.setState({route: \"signin\"})\n  }\n\n  onSignUp = () => {\n    this.setState({route: 'loading'});\n    fetch('https://infinite-hamlet-28839.herokuapp.com/signup', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        name: this.state.Name,\n        aadhar: this.state.Aadhar,\n        phoneNumber: this.state.phone_no,\n        password: this.state.Password\n      })\n    })\n    .then(response => response.json())\n    .then(data => {\n      if(data === false){\n        this.setState({alert: true});\n        this.setState({route: \"signup\"})\n      }\n      else{\n        sessionStorage.setItem('token', data.token);\n        this.setState({route: \"home\"});\n      }\n    })\n  }\n  \n  render() {\n    if(this.state.route === 'loading'){\n      return(\n        <Grid container justify=\"center\" alignItems=\"center\" style={{marginTop: \"300px\"}}>\n          <CircularProgress style={{color: \"#ffffff\"}}/>\n        </Grid>\n      );\n    }\n    else if(this.state.route === 'signup'){\n      return (\n        <div style={{marginTop: '50px'}}>\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Card style={{padding: '50px'}}>\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n              <Typography variant=\"h3\">\n                Sign Up\n              </Typography>\n              <TextField\n                type=\"text\"\n                label=\"Enter Name\"\n                placeholder=\"Enter Name\"\n                margin=\"normal\"\n                onChange={this.onNameChange}\n              />\n              <TextField\n                type=\"text\"\n                label=\"Enter Aadhar Number\"\n                placeholder=\"Enter Aadhar Number\"\n                margin=\"normal\"\n                onChange={this.onAadharChange}\n              />\n              <TextField\n                type=\"text\"\n                label=\"Enter Phone Number\"\n                placeholder=\"Enter Phone Number\"\n                margin=\"normal\"\n                onChange={this.onPhoneNumberChange}\n              />\n              <TextField\n                type=\"password\"\n                label=\"Enter Password\"\n                placeholder=\"Enter Phone Number\"\n                margin=\"normal\"\n                onChange={this.onPasswordChange}\n              />\n              <Button variant=\"contained\" color=\"primary\" onClick={this.onSignUp} style={{marginTop: '20px'}}>\n                Sign Up\n              </Button> \n              <Typography style={{ cursor: 'pointer', marginTop: '20px' }} onClick={this.onSignInClick}>\n                Sign In?\n              </Typography>\n            </Grid>\n          </Card>\n        </Grid>\n        <Dialog\n          open={this.state.alert}\n          onClose={this.handleAlertClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n        <DialogTitle>{\"Phone Number Already Exists\"}</DialogTitle>\n        <DialogActions>\n          <Button onClick={this.handleAlertClose} color=\"primary\" autoFocus>\n            Close\n          </Button>\n        </DialogActions>\n        </Dialog>\n      </div>\n      );\n    }\n    else if (this.state.route === 'home'){\n      return(\n        <Redirect to=\"/home\"/>\n      );\n    }\n    else if(this.state.route === 'signin'){\n      return(\n        <Redirect to=\"/\"/>\n      );\n    }\n  }\n}\n\nexport default SignUp;\n","import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom';\nimport { Button, Grid, Typography, Card, Table, TableBody, TableCell, TableRow, CircularProgress } from '@material-ui/core';\n\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      route: 'loading',\n      userInfo: {\n        id: '',\n        name: '',\n        phoneNumber: '',\n        aadhar: '',\n        password: '',\n      }\n    }\n  };\n\n  updateUserInfo = (data) => {\n    this.setState({userInfo: { \n      id: data.id,\n      name: data.name,\n      phoneNumber: data.phone_no,\n      aadhar: data.aadhar,\n      password: data.password \n    }})\n    this.setState({route: 'home'})\n  }\n\n  onLogout = () => {\n    this.setState({route: 'signin'});\n    sessionStorage.removeItem('token');\n  }\n\n  componentDidMount = () => {\n    fetch('https://infinite-hamlet-28839.herokuapp.com/home', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        token: sessionStorage.getItem('token'),\n      })\n    })\n      .then(response => response.json())\n      .then(data => {\n        if(data === false){\n          this.setState({route: 'signin'});\n        }\n        else{\n          this.updateUserInfo(data);\n        }\n      })\n  }\n\n  render() {\n    if(this.state.route === 'loading'){\n      return(\n        <Grid container justify=\"center\" alignItems=\"center\" style={{marginTop: \"300px\"}}>\n          <CircularProgress style={{color: \"#ffffff\"}}/>\n        </Grid>\n      );     \n    }\n    else if(this.state.route === 'home'){\n      return(\n        <div style={{marginTop: '50px'}}>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Card style={{padding: '50px'}}>\n              <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n                <Typography variant=\"h3\">\n                  User Information\n                </Typography>\n                <Table>\n                  <TableBody>\n                    <TableRow>\n                      <TableCell>User ID</TableCell>\n                      <TableCell>{this.state.userInfo.id}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>Name</TableCell>\n                      <TableCell>{this.state.userInfo.name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>Phone Number</TableCell>\n                      <TableCell>{this.state.userInfo.phoneNumber}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>Aadhar Number</TableCell>\n                      <TableCell>{this.state.userInfo.aadhar}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                      <TableCell>Password</TableCell>\n                      <TableCell>{this.state.userInfo.password}</TableCell>\n                    </TableRow>\n                  </TableBody>\n                </Table>\n                <Button onClick={this.onLogout} variant=\"contained\" color=\"primary\" style={{marginTop: \"20px\"}} autoFocus>\n                  Logout\n                </Button>\n              </Grid>\n            </Card>\n          </Grid>\n        </div>  \n      );\n    }\n    else if(this.state.route === 'signin'){\n      return(\n        <Redirect to=\"/\"/>\n      );\n    }\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport SignIn from './components/SignIn';\nimport SignUp from './components/SignUp';\nimport {BrowserRouter, Route} from 'react-router-dom';  \nimport Home from './components/Home';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        user: {\n            id: '',\n            name: '',\n            phoneNumber: '',\n            aadhar: '',\n            password: ''\n          }\n    }\n  };\n\n  loadUser = (data) => {\n    this.setState({user: { \n        id: data.id,\n        name: data.name,\n        phoneNumber: data.phone_no,\n        aadhar: data.aadhar,\n        password: data.password \n    }})\n  }\n\n  render() {\n      return(\n        <BrowserRouter>\n            <div>\n            <Route \n                exact path=\"/\"\n                render={() => (\n                    <SignIn loadUser={this.loadUser} />\n                )} \n            />\n            <Route \n                exact path=\"/home\"\n                render={() => (\n                    <Home phoneNumber={this.state.user.phoneNumber}  />\n                )} \n            />\n            <Route \n                exact path=\"/signup\"\n                render={() => (\n                    <SignUp loadUser={this.loadUser} />\n                )} \n            />\n            </div>\n        </BrowserRouter>\n      );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport './index.css'\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}